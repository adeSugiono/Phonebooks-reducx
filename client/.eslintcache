[{"/home/ades/Documents/rubicamp/code/c39/client/src/index.js":"1","/home/ades/Documents/rubicamp/code/c39/client/src/components/BoxPhone.js":"2","/home/ades/Documents/rubicamp/code/c39/client/src/components/ButtonAdd.js":"3","/home/ades/Documents/rubicamp/code/c39/client/src/components/ListPhone.js":"4","/home/ades/Documents/rubicamp/code/c39/client/src/components/TablePhone.js":"5"},{"size":222,"mtime":1607776157945,"results":"6","hashOfConfig":"7"},{"size":3794,"mtime":1608082812715,"results":"8","hashOfConfig":"7"},{"size":2709,"mtime":1608020683844,"results":"9","hashOfConfig":"7"},{"size":3572,"mtime":1608046853056,"results":"10","hashOfConfig":"7"},{"size":2998,"mtime":1608083935630,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1hagy64",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ades/Documents/rubicamp/code/c39/client/src/index.js",[],["24","25"],"/home/ades/Documents/rubicamp/code/c39/client/src/components/BoxPhone.js",["26"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport ButtonAdd from './ButtonAdd';\nimport ListPhone from './ListPhone';\n\n\n\nconst request = axios.create({\n    baseURL: 'http://localhost:5000/api',\n    timeout: 1000,\n    headers: { 'X-Custom-Header': 'foobar' }\n});\n\n\nexport default class BoxPhone extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: []\n        }\n        this.addData = this.addData.bind(this)\n        this.editData = this.editData.bind(this)\n        this.removeData = this.removeData.bind(this)\n        this.resendData = this.resendData.bind(this)\n    }\n\n    //lifesycle\n    componentDidMount() {\n        request.get('phonebooks')\n            .then(function (response) {\n                const data = response.data.map(item => {\n                    item.sent = true;\n                    return item\n                })\n                this.setState({ data: data })\n            }.bind(this))\n            .catch(function (error) {\n                console.log(error)\n            })\n\n    }\n\n    addData(name, phone) {\n        const id = Date.now();\n        this.setState(function (state, props) {\n            return {\n                data: [...state.data, { id, name, phone, sent: true }]\n            }\n        })\n        request.post('phonebooks', { id, name, phone })\n            .then(function (response) {\n                console.log(response)\n            })\n            .catch(function (error) {\n                this.setState(function (state, props) {\n                    return {\n                        data: state.data.map(item => {\n                            if (item.id === id) {\n                                item.sent = false\n                            }\n                            return item\n                        })\n                    }\n                })\n            }.bind(this))\n    }\n\n\n    editData(id, name, phone) {\n        request.put(`phonebooks/${id}`, { name, phone })\n            .then(function (response) {\n                console.log(response)\n            })\n            .catch(function (error) {\n                this.setState(function (state, props) {\n                    return {\n                        data: state.data.map(item => {\n                            if (item.id === id) {\n                                item.sent = false\n                            }\n                            return item\n                        })\n                    }\n                })\n            }.bind(this))\n    }\n\n\n    removeData(id) {\n        this.setState(function (state, props) {\n            return {\n                data: state.data.filter(item => item.id !== id)\n            }\n        })\n        request.delete(`phonebooks/${id}`).then(function (response) { console.log(response) }).catch(function (error) { console.log(error) }.bind(this))\n    }\n\n\n    resendData(id, name, phone) {\n        request.post('phonebooks', { id, name, phone }).then(function (response) { console.log(response) }).catch(function (error) {\n            this.setState(function (state, props) {\n                return {\n                    data: state.data.map(item => {\n                        if (item.id === id) {\n                            item.sent = true\n                        }\n                        return item\n                    })\n                }\n            })\n        }.bind(this))\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"container \">\n                <h1 className=\"card text-center alert alert-dark\">Phone Book Apps</h1>\n                <ButtonAdd addData={this.addData} />\n                <ListPhone data={this.state.data} removeData={this.removeData} resendData={this.resendData} editData={this.editData} />\n\n            </div>\n        )\n    }\n}\n","/home/ades/Documents/rubicamp/code/c39/client/src/components/ButtonAdd.js",[],"/home/ades/Documents/rubicamp/code/c39/client/src/components/ListPhone.js",[],"/home/ades/Documents/rubicamp/code/c39/client/src/components/TablePhone.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":95,"column":142,"nodeType":"33","messageId":"34","endLine":95,"endColumn":146,"fix":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"38","text":"39"},"no-global-assign","no-unsafe-negation",[2851,2862],""]